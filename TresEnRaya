import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class TresEnRaya extends JFrame implements ActionListener {
    private final JButton[][] buttons;
    private boolean xTurn;

    public TresEnRaya() {
        buttons = new JButton[3][3];
        xTurn = true;
          initializeUI();
    }

    private void initializeUI() {
        setTitle("Tres en Raya");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(3, 3));

        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j] = new JButton("");
                buttons[i][j].setFont(new Font("Arial", Font.PLAIN, 40));
                buttons[i][j].addActionListener(this);
                add(buttons[i][j]);
            }
        }

        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void checkWinner() {
        // Verifica filas y columnas
        for (int i = 0; i < 3; i++) {
            if (checkLine(buttons[i][0], buttons[i][1], buttons[i][2]) || checkLine(buttons[0][i], buttons[1][i], buttons[2][i])) {
                declareChampion();
                return;
            }
        }

        // Verifica diagonales
        if (checkLine(buttons[0][0], buttons[1][1], buttons[2][2]) || checkLine(buttons[0][2], buttons[1][1], buttons[2][0])) {
            declareChampion();
            return;
        }

        // Verifica empate
        if (isBoardFull()) {
            declareLoser();
        }
    }

    private boolean checkLine(JButton b1, JButton b2, JButton b3) {
        return !b1.getText().isEmpty() && b1.getText().equals(b2.getText()) && b2.getText().equals(b3.getText());
    }

    private boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (buttons[i][j].getText().isEmpty()) {
                    return false;
                }
            }
        }
        return true;
    }

    private void declareChampion() {
        JOptionPane.showMessageDialog(this, (xTurn ? "X" : "O") + " ha ganado!");
        resetGame();
       
    }

    private void declareLoser() {
        JOptionPane.showMessageDialog(this, "Empate. ¡Inténtalo de nuevo!");
        resetGame();
    }

    private void resetGame() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j].setText("");
            }
        }
        xTurn = true;
    }

    /**
     *
     * @param e     */
    @Override
    public void actionPerformed(ActionEvent e) {
        JButton clickedButton = (JButton) e.getSource();

        if (clickedButton.getText().isEmpty()) {
            clickedButton.setText(xTurn ? "X" : "O");
            xTurn = !xTurn;
            checkWinner();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(TresEnRaya::new);
    }
    
}
    
